---
- name: Install libcap
  package:
    name: "libcap2-bin"
    state: present
  loop_control:
    loop_var: pkg
  ignore_errors: "{{ ansible_check_mode }}"
  register: install_packages
  until: install_packages is success
  retries: 5
  delay: 2

# TODO (VDO): replace by package
- name: Download blackbox exporter binary to local folder
  become: false
  unarchive:
    src: "https://github.com/prometheus/blackbox_exporter/releases/download/v{{ openio_blackbox_exporter_version }}\
/blackbox_exporter-{{ openio_blackbox_exporter_version }}.linux-\
{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}.tar.gz"
    dest: "/tmp"
    remote_src: true
    creates: "/tmp/blackbox_exporter-{{ openio_blackbox_exporter_version }}.linux-\
{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}/blackbox_exporter"
  register: _download_binary
  until: _download_binary is succeeded
  retries: 5
  delay: 2
  delegate_to: localhost
  check_mode: false
  tags: install

- name: Propagate blackbox exporter binary
  copy:
    src: "/tmp/blackbox_exporter-{{ openio_blackbox_exporter_version }}.linux-\
{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}/blackbox_exporter"
    dest: "/usr/local/bin/blackbox_exporter"
    mode: 0750
    owner: "openio"
    group: "openio"
  tags: install

- name: Ensure blackbox exporter binary has cap_net_raw capability
  capabilities:
    path: '/usr/local/bin/blackbox_exporter'
    capability: cap_net_raw+ep
    state: present
  ignore_errors: "{{ ansible_check_mode }}"
  tags: install

- name: Create systemd service unit
  copy:
    src: "blackbox_exporter.service"
    dest: "/etc/systemd/system/blackbox_exporter.service"
    owner: "openio"
    group: "openio"
  tags: install
...
